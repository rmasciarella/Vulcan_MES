# =============================================================================
# SHARED ENVIRONMENT VARIABLES
# Variables used by both backend and frontend applications
# =============================================================================

# Database Configuration
DATABASE_URL=postgresql://postgres:postgres@localhost:5432/vulcan
POSTGRES_USER=postgres
POSTGRES_PASSWORD=postgres
POSTGRES_DB=vulcan

# Redis Cache
REDIS_URL=redis://localhost:6379

# Supabase Configuration (shared between backend and frontend)
SUPABASE_URL=https://your-project.supabase.co
SUPABASE_ANON_KEY=your-anon-key
SUPABASE_SERVICE_KEY=your-service-key

# Environment
NODE_ENV=development
PYTHON_ENV=development

# Security
JWT_SECRET_KEY=changeme-use-a-secure-key-in-production
JWT_ALGORITHM=HS256
ACCESS_TOKEN_EXPIRE_MINUTES=30

# =============================================================================
# ENVIRONMENT-SPECIFIC CONFIGURATION NOTES
# =============================================================================

# Development Environment:
# - Use localhost database and Redis
# - Use test Supabase project with development keys
# - Use short token expiration for testing

# Staging Environment:
# - Use staging database and Redis instances
# - Use staging Supabase project
# - Use moderate token expiration times

# Production Environment:
# - Use production database with SSL and connection pooling
# - Use production Supabase project with rotated keys
# - Use secure token expiration (30-60 minutes)
# - Enable database connection encryption

# =============================================================================
# SECURITY NOTES
# =============================================================================

# 1. Never commit real credentials to version control
# 2. Use different database instances for each environment
# 3. Rotate JWT_SECRET_KEY regularly in production
# 4. Use environment-specific Supabase projects
# 5. Monitor database connections and Redis usage
# 6. Ensure database URLs use SSL in production